using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;

// For more information on enabling Web API for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

namespace LibraryManagement.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class TodoController : Controller
    {
//        private readonly TodoContext _context;
//
//        public TodoController(TodoContext context)
//        {
//            _context = context;
//
//            if (_context.TodoItems.Count() == 0)
//            {
//                // Create a new TodoItem if collection is empty,
//                // which means you can't delete all TodoItems.
//                _context.TodoItems.Add(new TodoItem { Name = "Item1" });
//                _context.SaveChanges();
//            }
//        }
//        [HttpGet]
//        public ActionResult<List<TodoItem>> GetAll()
//        {
//            return _context.TodoItems.ToList();
//        }
//
//        [HttpGet("{id}", Name = "GetTodo")]
//        public ActionResult<Blog> GetById(long id)
//        {
////            var item = _context.TodoItems.Find(id);
////            if (item == null)
////            {
////                return NotFound();
////            }
//            using (var context = new BloggingContext())
//            {
//                var item = context.Blog.Find(1);
//                return item;
//            }
//            return NotFound();
//        }
//        [HttpPost]
//        public IActionResult Create(TodoItem item)
//        {
//            _context.TodoItems.Add(item);
//            _context.SaveChanges();
//
//            return CreatedAtRoute("GetTodo", new { id = item.Id }, item);
//        }
//        [HttpDelete("{id}")]
//        public IActionResult Delete(long id)
//        {
//            var todo = _context.TodoItems.Find(id);
//            if (todo == null)
//            {
//                return NotFound();
//            }
//
//            _context.TodoItems.Remove(todo);
//            _context.SaveChanges();
//            return NoContent();
//        }
    }
}
